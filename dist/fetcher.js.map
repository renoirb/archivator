{"version":3,"sources":["../src/fetcher.js"],"names":["recv","text","then","load","payload","shard","html","handleHtmlDocument","url","catch","fetchDocumentError","fetchDocument","listArchivable","archivable","dirName","slug","fileName","fsa","createDirectory","exists","response","ok","pageSnippet","writeTextFile","console","info","err","message","cache","list","log","Promise","all","fetcher","errorObj","error","code"],"mappings":"AAAA,aAEA;;;;;;;;;;;oHAiBA,UAAkCA,IAAlC,CAAwC,CACtC,MAAOA,MAAKC,IAAL,GACJC,IADI,CACC,wBAAW,mBAAQC,IAAR,CAAaC,OAAb,CAAX,CADD,EAEJF,IAFI,CAEC,sBAASG,OAAMC,IAAN,EAAT,CAFD,CAGR,C,iBAJcC,mB,gGAMf,UAA6BC,GAA7B,CAAkC,CAChC,MAAO,wBAAMA,GAAN,EACJC,KADI,CACEC,kBADF,CAER,C,iBAHcC,c,0FAYf,UAAqBC,cAArB,CAAqC,CACnC,IAAK,KAAMC,WAAX,GAAyBD,eAAzB,CAAyC,CACvC,KAAME,SAAW,WAAUD,WAAWE,IAAK,EAA3C,CAA8C;AAC9C,KAAMC,UAAY,GAAEF,OAAQ,aAA5B,CACA,GAAI,CACF,KAAMG,KAAIC,eAAJ,CAAoBJ,OAApB,CAAN,CACA,GAAI,CAAC,KAAMG,KAAIE,MAAJ,CAAWH,QAAX,CAAP,IAAiC,KAArC,CAA4C,CAC1C,KAAMI,UAAW,KAAMT,eAAcE,WAAWL,GAAzB,CAAvB,CACA,GAAIY,SAASC,EAAT,GAAgB,IAApB,CAA0B,CACxB,KAAMC,aAAc,KAAMf,oBAAmBa,QAAnB,CAA1B,CACA,KAAMH,KAAIM,aAAJ,CAAkBP,QAAlB,CAA4BM,WAA5B,CAAyC,MAAzC,CAAN,CACAE,QAAQC,IAAR,CAAc,YAAWT,QAAS,EAAlC,CACD,CAJD,IAIO,CACLQ,QAAQC,IAAR,CAAc,oBAAmBZ,WAAWL,GAAI,EAAhD,CACD,CACF,CATD,IASO,CACLgB,QAAQC,IAAR,CAAc,kBAAiBT,QAAS,EAAxC,CACD,CACF,CAAC,MAAOU,GAAP,CAAY,CACZF,QAAQC,IAAR,CAAc,oBAAmBZ,WAAWL,GAAI,KAAIkB,IAAIC,OAAQ,EAAhE,CACD,CACF,CACF,C,iBAtBcC,M,4FAwBf,UAAuBC,IAAvB,CAA6B,CAC3B,KAAMD,OAAMC,IAAN,CAAN,CACAL,QAAQM,GAAR,CAAa,oBAAb,EACA,MAAOC,SAAQC,GAAR,CAAYH,IAAZ,CACR,C,iBAJcI,Q,8CA9Cf,gC,+CACA,qC,mDACA,qC,GAAYhB,I,wuBAaZ,QAASP,mBAAT,CAA4BwB,QAA5B,CAAsC,CACpC;AACA;AACA;AACAV,QAAQW,KAAR,CAAe,4BAA2BD,SAASE,IAAK,KAAIF,SAASP,OAAQ,EAA7E,CACD,C,gBAgCcM,O","file":"fetcher.js","sourcesContent":["'use strict';\n\n/**\n * Archivator\n *\n * Archive URLs into text files\n *\n * Big thanks to https://hackernoon.com/an-ode-to-async-await-7da2dd3c2056#.heq66t6kh\n *\n * * https://github.com/bitinn/node-fetch\n * * https://github.com/cheeriojs/cheerio\n * * https://github.com/davetemplin/async-file\n * * https://github.com/kriasoft/babel-starter-kit/blob/master/package.json\n */\n\nimport cheerio from 'cheerio';\nimport fetch from 'node-fetch';\nimport * as fsa from 'async-file';\n\nasync function handleHtmlDocument(recv) {\n  return recv.text()\n    .then(payload => cheerio.load(payload))\n    .then(shard => shard.html());\n}\n\nasync function fetchDocument(url) {\n  return fetch(url)\n    .catch(fetchDocumentError);\n}\n\nfunction fetchDocumentError(errorObj) {\n  // Handle error codes below #TODO\n  // if (errorObj.code === 'ETIMEDOUT')\n  // if (errorObj.code === 'ENETUNREACH')\n  console.error(`fetchDocumentError (code ${errorObj.code}: ${errorObj.message}`);\n}\n\nasync function cache(listArchivable) {\n  for (const archivable of listArchivable) {\n    const dirName = `archive/${archivable.slug}`; // Make parent folder configurable #TODO\n    const fileName = `${dirName}/cache.html`;\n    try {\n      await fsa.createDirectory(dirName);\n      if ((await fsa.exists(fileName)) === false) {\n        const response = await fetchDocument(archivable.url);\n        if (response.ok === true) {\n          const pageSnippet = await handleHtmlDocument(response);\n          await fsa.writeTextFile(fileName, pageSnippet, 'utf8');\n          console.info(`Archived ${fileName}`);\n        } else {\n          console.info(`Had problem with ${archivable.url}`);\n        }\n      } else {\n        console.info(`Already exists ${fileName}`);\n      }\n    } catch (err) {\n      console.info(`Had problem with ${archivable.url}: ${err.message}`);\n    }\n  }\n}\n\nasync function fetcher(list) {\n  await cache(list);\n  console.log(`Done fetching.\\n\\n`);\n  return Promise.all(list);\n}\n\nexport default fetcher;\n"]}