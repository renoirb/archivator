{"version":3,"sources":["../src/fetcher.js"],"names":["recv","text","then","load","payload","shard","html","handleDocument","url","catch","fetchDocumentError","fetchDocument","listArchivable","processed","ok","failed","archivable","dirName","slug","fileName","fs","createDirectory","exists","response","push","pageSnippet","writeTextFile","console","info","cache","list","log","Promise","all","fetcher","errorObj","error","code","message"],"mappings":"AAAA,aAEA;;;;;;;;;;;gHAiBA,UAA8BA,IAA9B,CAAoC,CAClC,MAAOA,MAAKC,IAAL,GACJC,IADI,CACC,wBAAW,mBAAQC,IAAR,CAAaC,OAAb,CAAX,CADD,EAEJF,IAFI,CAEC,sBAASG,OAAMC,IAAN,EAAT,CAFD,CAGR,C,iBAJcC,e,gGAMf,UAA6BC,GAA7B,CAAkC,CAChC,MAAO,wBAAMA,GAAN,EACJC,KADI,CACEC,kBADF,CAER,C,iBAHcC,c,0FAaf,UAAqBC,cAArB,CAAqC,CACnC,KAAMC,WAAY,CAACC,GAAI,EAAL,CAASC,OAAQ,EAAjB,CAAlB,CAAwC;AACxC,IAAK,KAAMC,WAAX,GAAyBJ,eAAzB,CAAyC,CACvC,KAAMK,SAAW,WAAUD,WAAWE,IAAK,EAA3C,CAA8C;AAC9C,KAAMC,UAAY,GAAEF,OAAQ,aAA5B,CACA,KAAMG,IAAGC,eAAH,CAAmBJ,OAAnB,CAAN,CACA,GAAI,CAAC,KAAMG,IAAGE,MAAH,CAAUH,QAAV,CAAP,IAAgC,KAApC,CAA2C,CACzC,KAAMI,UAAW,KAAMZ,eAAcK,WAAWR,GAAzB,CAAvB,CACA,GAAIe,SAAST,EAAT,GAAgB,IAApB,CAA0B,CACxBD,UAAUC,EAAV,CAAaU,IAAb,CAAkBR,WAAWR,GAA7B,EACA,KAAMiB,aAAc,KAAMlB,gBAAegB,QAAf,CAA1B,CACA,KAAMH,IAAGM,aAAH,CAAiBP,QAAjB,CAA2BM,WAA3B,CAAwC,MAAxC,CAAN,CACAE,QAAQC,IAAR,CAAc,YAAWT,QAAS,EAAlC,CACD,CALD,IAKO,CACLN,UAAUE,MAAV,CAAiBS,IAAjB,CAAsBR,WAAWR,GAAjC,EACAmB,QAAQC,IAAR,CAAc,oBAAmBZ,WAAWR,GAAI,EAAhD,CACD,CACF,CAXD,IAWO,CACLmB,QAAQC,IAAR,CAAc,kBAAiBT,QAAS,EAAxC,CACD,CACF,CACF,C,iBArBcU,M,4FAuBf,UAAuBC,IAAvB,CAA6B,CAC3B,KAAMD,OAAMC,IAAN,CAAN,CACAH,QAAQI,GAAR,CAAa,oBAAb,EACA,MAAOC,SAAQC,GAAR,CAAYH,IAAZ,CACR,C,iBAJcI,Q,8CA9Cf,gC,+CACA,qC,mDACA,qC,GAAYd,G,wuBAaZ,QAASV,mBAAT,CAA4ByB,QAA5B,CAAsC,CACpC;AACA;AACA;AACAR,QAAQS,KAAR,CAAe,4BAA2BD,SAASE,IAAK,KAAIF,SAASG,OAAQ,EAA7E,EACA,MAAO,CAACxB,GAAI,KAAL,CACR,C,gBA+BcoB,O","file":"fetcher.js","sourcesContent":["'use strict';\n\n/**\n * Archivator\n *\n * Archive URLs into text files\n *\n * Big thanks to https://hackernoon.com/an-ode-to-async-await-7da2dd3c2056#.heq66t6kh\n *\n * * https://github.com/bitinn/node-fetch\n * * https://github.com/cheeriojs/cheerio\n * * https://github.com/davetemplin/async-file\n * * https://github.com/kriasoft/babel-starter-kit/blob/master/package.json\n */\n\nimport cheerio from 'cheerio';\nimport fetch from 'node-fetch';\nimport * as fs from 'async-file';\n\nasync function handleDocument(recv) {\n  return recv.text()\n    .then(payload => cheerio.load(payload))\n    .then(shard => shard.html());\n}\n\nasync function fetchDocument(url) {\n  return fetch(url)\n    .catch(fetchDocumentError);\n}\n\nfunction fetchDocumentError(errorObj) {\n  // Handle error codes below #TODO\n  // if (errorObj.code === 'ETIMEDOUT')\n  // if (errorObj.code === 'ENETUNREACH')\n  console.error(`fetchDocumentError (code ${errorObj.code}: ${errorObj.message}`);\n  return {ok: false};\n}\n\nasync function cache(listArchivable) {\n  const processed = {ok: [], failed: []}; // eslint-disable-line prefer-const\n  for (const archivable of listArchivable) {\n    const dirName = `archive/${archivable.slug}`; // Make parent folder configurable #TODO\n    const fileName = `${dirName}/cache.html`;\n    await fs.createDirectory(dirName);\n    if ((await fs.exists(fileName)) === false) {\n      const response = await fetchDocument(archivable.url);\n      if (response.ok === true) {\n        processed.ok.push(archivable.url);\n        const pageSnippet = await handleDocument(response);\n        await fs.writeTextFile(fileName, pageSnippet, 'utf8');\n        console.info(`Archived ${fileName}`);\n      } else {\n        processed.failed.push(archivable.url);\n        console.info(`Had problem with ${archivable.url}`);\n      }\n    } else {\n      console.info(`Already exists ${fileName}`);\n    }\n  }\n}\n\nasync function fetcher(list) {\n  await cache(list);\n  console.log(`Done fetching.\\n\\n`);\n  return Promise.all(list);\n}\n\nexport default fetcher;\n"]}