{"version":3,"sources":["../src/transformer.js"],"names":["recv","source","p","Promise","resolve","load","then","selector","truncate","figureOutTruncateAndSelector","shard","remove","links","each","_","element","href","attr","hrefObj","push","origin","pathname","err","extractLinks","title","text","body","html","frontMatter","meta","metadata","k","simplified","top","join","bottom","markdownify","assets","cheerioConfig","references","forEach","ref","match","name","src","newSrc","reworkAssetReference","s","Set","potential","isInlineImage","test","add","extractAssets","matches","reduced","m","url","dest","slug","handleAssets","console","log","length","asset","assetSrcOrigin","domainsBlacklist","includes","hostname","download","catch","downloadError","downloadAssets","fileName","fileExists","fs","exists","ok","createWriteStream","pipe","file","data","readFile","readCached","sourceList","cachedFilePath","cachedFileName","cached","readCachedError","cacheJsonRepresentation","cacheJsonFile","writeTextFile","JSON","stringify","markdownifiedFile","markdownified","reworked","main","list","all","transformer","normalizeWhitespace","xmlMode","decodeEntities","sourceArgument","errorObj","code","error","message","path","reject"],"mappings":"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","file":"transformer.js","sourcesContent":["'use strict';\n\n/**\n * Transformer\n *\n * Read cached HTML files, transform them so we get only the main content\n */\n\n// cheerio, or https://github.com/lapwinglabs/x-ray\n// http://noodlejs.com/#Overview\nimport {URL} from 'url';\nimport cheerio from 'cheerio';\nimport htmlmd from 'html-md-2';\n\nimport fetch from 'node-fetch';\nimport * as fs from 'async-file';\n\nimport hasher from './normalizer/hash';\nimport assetizer from './normalizer/assets';\n\nconst cheerioConfig = {normalizeWhitespace: true, xmlMode: false, decodeEntities: true};\n\nconst domainsBlacklist = ['in.getclicky.com', 's7.addthis.com', 'c.statcounter.com', 'sb.scorecardresearch.com', 'pubads.g.doubleclick.net', 'googleads.g.doubleclick.net'];\n\n/**\n * Given every row in source file .csv\n * http://example.org/a/b.html;selector;truncate\n *\n * selector is the CSS selector where the main content is\n * truncate is a list of CSS selectors to strip off\n */\nfunction figureOutTruncateAndSelector(sourceArgument) {\n  // If we know exactly where the main content is, otherwise grab the whole\n  // document body.\n  const selector = (sourceArgument.selector.length === 0) ? 'body' : `${sourceArgument.selector}`;\n  // Truncate is to strip off any patterns we do not want\n  // as part of our archived article.\n  let truncate = (sourceArgument.truncate.length === 0) ? '' : `${sourceArgument.truncate},`;\n  truncate += 'script,style,noscript';\n  return {selector, truncate};\n}\n\nasync function extractLinks(recv, source) {\n  const p = new Promise(resolve => resolve(cheerio.load(recv, {})));\n  return p.then(shard => {\n    const {selector, truncate} = figureOutTruncateAndSelector(source);\n    shard(truncate).remove();\n    shard(selector);\n    const links = [];\n    shard('a[href]').each((_, element) => {\n      const href = shard(element).attr('href');\n      try {\n        const hrefObj = new URL(href);\n        links.push(`${hrefObj.origin}${hrefObj.pathname}`);\n      } catch (err) {}\n    });\n    return links;\n  });\n}\n\nasync function markdownify(recv, source) {\n  const p = new Promise(resolve => resolve(cheerio.load(recv, {})));\n  return p.then(shard => {\n    const {selector, truncate} = figureOutTruncateAndSelector(source);\n    const title = shard('title').text();\n    shard(truncate).remove();\n    const body = shard(selector).html();\n    const frontMatter = {title};\n    return {meta: frontMatter, body};\n  })\n  .then(simplified => {\n    const metadata = [];\n    for (const k in simplified.meta) {\n      metadata.push(`${k}: \"${simplified.meta[k]}\"`);\n    }\n    const top = metadata.join(`\\n`);\n    const bottom = htmlmd(simplified.body);\n    return `${top}\\n\\n---\\n\\n${bottom}\\n`;\n  });\n}\n\nasync function reworkAssetReference(body, assets) {\n  const p = new Promise(resolve => resolve(cheerio.load(body, cheerioConfig)));\n  return p.then(shard => {\n    /**\n     * Each references dictionary should look like this;\n     * ```\n     * { 'http://example.org/a.png': '6c65613db26a19d838c0359989f941c303c04474.png',\n     *   'http://example.org/a.webm': '5c737acd98c723bbed666bbfb3d14a8e0d34266b.webm' }\n     * ```\n     */\n    const references = {};\n    assets.forEach(ref => {\n      references[ref.match] = ref.name;\n    });\n    return {references, shard};\n  })\n  .then(({references, shard}) => {\n    shard('img[src]').each((_, element) => {\n      /**\n       * What we receive looks like this;\n       * ```\n       * { '_': 0,\n       *   'element':\n       *    { type: 'tag',\n       *      name: 'img',\n       *      attribs:\n       *       { src: 'http://example.org/a.png',\n       *         alt: 'A Image Alt text',\n       *         class: 'example img class-name list' },\n       *      children: [],\n       *      next: null,\n       *      prev: {},\n       *      parent: {} } }\n       * ```\n       */\n      shard(element).attr('class', null);\n      const src = shard(element).attr('src');\n      /**\n       * Assuming our references object (see above) has a key\n       * (e.g. http://example.org/a.png) with a matching\n       * value (e.g. 6c65613db26a19d838c0359989f941c303c04474.png)\n       * we replace the img[src] value with it.\n       * That way, our Markdownified file will refer to archived\n       * assets beside it instead of ones from source origin.\n       */\n      const newSrc = (typeof references[src] === 'string') ? references[src] : src + '?err=CouldNotFind';\n      shard(element).attr('src', newSrc);\n    });\n    return shard.html();\n  });\n}\n\nasync function extractAssets(recv) {\n  const p = new Promise(resolve => resolve(cheerio.load(recv, cheerioConfig)));\n  return p.then(shard => {\n    // We do not need duplicates\n    const s = new Set();\n    /**\n     * Iterate with other types of assets.\n     * TODO\n     */\n    shard('body img[src]').each((_, element) => {\n      const potential = shard(element).attr('src');\n      // or is in a blacklist?\n      const isInlineImage = /;base64,/.test(potential);\n      if (isInlineImage === false) {\n        s.add(potential);\n      }\n    });\n    // We can return an Array once done\n    return [...s];\n  });\n}\n\n/**\n * Rework each asset so we can prepare to fetch\n *\n * Input is a list of resources in many possible format\n *\n * e.g.\n * matches = [ \"http://renoirboulanger.com/wp-content/themes/twentyseventeen/assets/images/header.jpg\"\n *            ,\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\"\n *            ,\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\"\n *            ,\"//www.gravatar.com/avatar/cbf8c9036c204fe85e15155f9d70faec?s=500\"\n *            ,\"/wp-content/themes/renoirb/assets/img/zce_logo.jpg\" ]\n *\n * source = { url: \"http://renoirboulanger.com/page/3/\"\n *               ,slug: 'renoirboulanger.com/page/3\"}\n *\n * Running handleAssets(matches, source) gives us a cleaned up list of assets where is a good guess\n * the asset might be found so we can make a copy and archive it.\n *\n * Notice:\n * - Each dest file are hashes with extension\n * - Gravatar sample started by //, and below, at src value, we'll have over http\n * - zce_logo.png is in /wp-content/..., but below at src value, it's on renoirboulanger.com\n *\n * e.g.\n * {\n *   \"assets\": [{\n *     \"src\": \"http://renoirboulanger.com/wp-content/themes/twentyseventeen/assets/images/header.jpg\",\n *     \"match\": \"http://renoirboulanger.com/wp-content/themes/twentyseventeen/assets/images/header.jpg\",\n *     \"dest\": \"renoirboulanger.com/page/3/430e2156af17010e0d8ffcd726a95595fa71a4fd.jpg\"\n *   },{\n *     \"src\": \"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\",\n *     \"match\": \"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\",\n *     \"dest\": \"renoirboulanger.com/page/3/b41de0a18bbb0871b22e0f5c466b3cd2f498807d.png\"\n *   },{\n *     \"src\": \"http://www.gravatar.com/avatar/cbf8c9036c204fe85e15155f9d70faec?s=500\",\n *     \"match\": \"//www.gravatar.com/avatar/cbf8c9036c204fe85e15155f9d70faec?s=500\",\n *     \"dest\": \"renoirboulanger.com/page/3/63dc122dfd3c702e12714fbe4ba744e463c49edb.img\"\n *   },{\n *     \"src\": \"http://renoirboulanger.com/wp-content/themes/renoirb/assets/img/zce_logo.jpg\",\n *     \"match\": \"/wp-content/themes/renoirb/assets/img/zce_logo.jpg\",\n *     \"dest\": \"renoirboulanger.com/page/3/840257d7de220958ca4cc05a3c0ee337e2b0401d.jpg\"\n *   }]\n * }\n */\nasync function handleAssets(matches, source) {\n  // console.log('handleAssets', [matches, source]); // DEBUG\n  const p = new Promise(resolve => resolve(matches));\n  return p.then(m => {\n    const reduced = [];\n    m.forEach(match => {\n      const src = assetizer(source.url, match);\n      const name = hasher(src);\n      const dest = `${source.slug}/${name}`;\n      reduced.push({src, match, dest, name});\n    });\n    return reduced;\n  });\n}\n\nasync function downloadAssets(assets) {\n  console.log(`    assets:`);\n  console.log(`      length: ${assets.length}`);\n  if (assets.length > 0) {\n    console.log(`      matches:`);\n    for (const asset of assets) {\n      // if (asset.src) is in blacklist #TODO\n      const assetSrcOrigin = new URL(asset.src);\n      if (domainsBlacklist.includes(assetSrcOrigin.hostname) === false) {\n        await download(asset).catch(downloadError);\n      }\n    }\n  }\n  console.log(`\\n`);\n}\n\nasync function download({src, dest}) {\n  const fileName = `archive/${dest}`; // Make parent folder configurable #TODO\n  const fileExists = await fs.exists(fileName);\n  console.log(`      - src: ${src}`);\n  if (fileExists === false) {\n    // Should we pass a User-Agent string? #TODO\n    // ... and a Referrer. As if we downloaded it from a UA?\n    const recv = await fetch(src);\n    if (recv.ok === true) {\n      console.log(`        dest: ${fileName}`);\n      const dest = fs.createWriteStream(fileName);\n      recv.body.pipe(dest);\n      console.log(`        status: OK`);\n    } else {\n      console.log(`        status: ERR, could not download.`);\n    }\n  }\n}\n\nfunction downloadError(errorObj) {\n  switch (errorObj.code) {\n    case 'ECONNREFUSED':\n      console.error(`downloadError (code ${errorObj.code}): Could not download ${errorObj.message}`);\n      break;\n    case 'ECONNRESET':\n      console.error(`downloadError (code ${errorObj.code}): Could not continue ${errorObj.message}`);\n      break;\n    default:\n      console.error(`downloadError (code ${errorObj.code}): ${errorObj.message}`, errorObj);\n      break;\n  }\n  return {ok: false}; // Return Promise.reject({}) or not to? That is the question.\n}\n\nasync function readCached(file) {\n  const data = await fs.readFile(file, 'utf8');\n  return data;\n}\n\nfunction readCachedError(errorObj) {\n  // Handle error codes below #TODO\n  switch (errorObj.code) {\n    case 'ENOENT':\n      // ENOENT: no such file or directory, open '...' Handle differently? #TODO\n      console.error(`readCachedError (code ${errorObj.code}): Could not access file at \"${errorObj.path}\"`);\n      break;\n    default:\n      console.error(`readCachedError (code ${errorObj.code}): ${errorObj.message}`);\n      break;\n  }\n  return Promise.reject({ok: false});\n}\n\nasync function main(sourceList) {\n  for (const source of sourceList) {\n    console.log(`  ----`);\n    const cachedFilePath = `archive/${source.slug}`; // Make parent folder configurable #TODO\n    console.log(`  - source: ${source.url}`);\n    console.log(`    path:   ${cachedFilePath}/`);\n    const cachedFileName = `${cachedFilePath}/cache.html`;\n    const cached = await readCached(cachedFileName).catch(readCachedError);\n    const matches = await extractAssets(cached);\n    const assets = await handleAssets(matches, source);\n    const links = await extractLinks(cached, source);\n    const cacheJsonRepresentation = {source, assets, links};\n    // cacheJsonRepresentation.matches = matches; // DEBUG\n    const cacheJsonFile = `${cachedFilePath}/cache.json`;\n    if ((await fs.exists(cacheJsonFile)) === false) {\n      await fs.writeTextFile(cacheJsonFile, JSON.stringify(cacheJsonRepresentation), 'utf8');\n    }\n    await downloadAssets(assets);\n    // Hacky. For now. I'll fix this soon.\n    const markdownifiedFile = `${cachedFilePath}/index.md`;\n    if ((await fs.exists(markdownifiedFile)) === false) {\n      console.log(`  ... markdownifying\\n\\n`);\n      let markdownified = `---\\nurl: ${source.url}\\n`;\n      // This is heavy. Let's not do it unless we really want.\n      // Not sure we NEVER want to overwrite. Make this configurable?\n      const reworked = await reworkAssetReference(cached, assets);\n      markdownified += await markdownify(reworked, source);\n      await fs.writeTextFile(markdownifiedFile, markdownified, 'utf8');\n    } else {\n      console.log(`  Already in Markdown!\\n\\n`);\n    }\n    // Not finished here #TODO\n    // console.log(JSON.stringify(prep));\n  }\n}\n\nasync function transformer(list) {\n  console.log(`Reading archive to gather image assets:`);\n  await main(list);\n  return Promise.all(list);\n}\n\nexport default transformer;\n"]}