// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextProcessingNormalizer Happy-Path 1`] = `
TextProcessingNormalizer {
  "locales": Array [
    "en-CA",
    "fr-CA",
  ],
  "stopWords": Array [
    "a",
    "add",
    "an",
    "and",
    "any",
    "are",
    "as",
    "at",
    "be",
    "by",
    "call",
    "can",
    "into",
    "is",
    "none",
    "of",
    "off",
    "use",
    "very",
  ],
}
`;

exports[`TextProcessingNormalizer Happy-Path 2`] = `
Object {
  "0": 2,
  "10101011": 2,
  "200": 2,
  "203011311": 2,
  "80": 2,
  "_call_awslatestmetadatas": 2,
  "_call_awsurl": 3,
  "_get_dreamcompute_additional": 2,
  "_get_dreamcompute_hostinfopath": 2,
  "_grains": 2,
  "_snake_caseify_dictdata": 2,
  "a_grainsdreamcomputepy": 2,
  "all": 4,
  "api": 39,
  "app1": 2,
  "availability_zone": 2,
  "available": 3,
  "aws": 4,
  "but": 3,
  "call_response_data": 4,
  "case": 3,
  "cluster": 6,
  "conn": 2,
  "connrequestget": 2,
  "d": 2,
  "data": 21,
  "def": 8,
  "dline": 3,
  "does": 2,
  "doesnt": 2,
  "dreamcompute": 5,
  "dreamcompute_info": 2,
  "dreamcomputeopenstack": 2,
  "each": 2,
  "ec2": 7,
  "elif": 2,
  "else": 4,
  "error": 2,
  "except": 5,
  "file": 5,
  "folder": 2,
  "following": 2,
  "for": 6,
  "from": 6,
  "function": 2,
  "get": 5,
  "grain": 3,
  "grains": 10,
  "grainsget": 3,
  "have": 2,
  "hostname": 4,
  "http": 2,
  "httplib": 2,
  "httplibhttpconnection169254169254": 2,
  "i": 6,
  "iad1": 3,
  "if": 7,
  "import": 4,
  "in": 15,
  "information": 4,
  "instance": 3,
  "internal": 2,
  "ioerror": 2,
  "it": 4,
  "key": 4,
  "keys": 2,
  "keys_to_mute": 3,
  "know": 2,
  "latestmetadata": 2,
  "latestmetadatablockdevicemappingamiinfo": 2,
  "latestmetadatablockdevicemappingebs0info": 2,
  "latestmetadatablockdevicemappingebs1info": 2,
  "latestmetadatablockdevicemappinginfo": 2,
  "latestmetadatablockdevicemappingrootinfo": 2,
  "latestmetadatahostnameinfo": 2,
  "latestmetadatainfo": 2,
  "latestmetadatainstanceactioninfo": 2,
  "latestmetadatainstanceidinfo": 2,
  "latestmetadatainstancetypeinfo": 2,
  "latestmetadatalocalipv4info": 2,
  "latestmetadataplacementavailabilityzoneinfo": 2,
  "latestmetadataplacementinfo": 2,
  "latestmetadatapublicipv4info": 2,
  "latestmetadataramdiskidinfo": 2,
  "latestmetadatareservationidinfo": 2,
  "lightspeed": 2,
  "like": 2,
  "line": 8,
  "log": 2,
  "logging": 2,
  "loginfocould": 3,
  "make": 3,
  "metadata": 7,
  "might": 2,
  "minion": 3,
  "more": 2,
  "my": 3,
  "name": 3,
  "nd": 2,
  "network_config": 2,
  "not": 10,
  "nova": 2,
  "on": 4,
  "openstack": 6,
  "openstack20120810meta_datajsoninfo": 2,
  "original": 5,
  "path": 5,
  "placement": 2,
  "public": 2,
  "publickeys": 3,
  "python": 3,
  "read": 5,
  "recursive": 2,
  "return": 13,
  "returns": 2,
  "s": 3,
  "salt": 8,
  "saltnovalocal": 3,
  "script": 8,
  "securitygroups": 2,
  "serr": 6,
  "service": 2,
  "should": 2,
  "some": 6,
  "sshrsa": 2,
  "stack": 2,
  "such": 2,
  "that": 17,
  "the": 37,
  "this": 6,
  "timeout1": 2,
  "to": 58,
  "try": 2,
  "url": 3,
  "v": 2,
  "vda": 2,
  "vm": 2,
  "was": 3,
  "what": 4,
  "which": 2,
  "will": 3,
  "within": 2,
  "work": 3,
  "x": 2,
  "you": 8,
  "your": 3,
}
`;

exports[`TextProcessingNormalizer Happy-Path 3`] = `
Map {
  "to" => 58,
  "api" => 39,
  "the" => 37,
  "data" => 21,
  "that" => 17,
  "in" => 15,
  "return" => 13,
  "grains" => 10,
  "not" => 10,
  "salt" => 8,
  "script" => 8,
  "you" => 8,
  "def" => 8,
  "line" => 8,
  "metadata" => 7,
  "ec2" => 7,
  "if" => 7,
  "i" => 6,
  "openstack" => 6,
  "cluster" => 6,
  "from" => 6,
  "some" => 6,
  "for" => 6,
  "this" => 6,
  "serr" => 6,
  "original" => 5,
  "file" => 5,
  "dreamcompute" => 5,
  "get" => 5,
  "path" => 5,
  "read" => 5,
  "except" => 5,
  "what" => 4,
  "on" => 4,
  "it" => 4,
  "information" => 4,
  "hostname" => 4,
  "aws" => 4,
  "import" => 4,
  "all" => 4,
  "key" => 4,
  "call_response_data" => 4,
  "else" => 4,
  "my" => 3,
  "work" => 3,
  "was" => 3,
  "grainsget" => 3,
  "minion" => 3,
  "will" => 3,
  "but" => 3,
  "name" => 3,
  "iad1" => 3,
  "instance" => 3,
  "make" => 3,
  "_call_awsurl" => 3,
  "url" => 3,
  "your" => 3,
  "grain" => 3,
  "python" => 3,
  "available" => 3,
  "case" => 3,
  "saltnovalocal" => 3,
  "keys_to_mute" => 3,
  "dline" => 3,
  "publickeys" => 3,
  "loginfocould" => 3,
  "s" => 3,
  "0" => 2,
  "80" => 2,
  "200" => 2,
  "10101011" => 2,
  "203011311" => 2,
  "more" => 2,
  "app1" => 2,
  "such" => 2,
  "within" => 2,
  "vda" => 2,
  "network_config" => 2,
  "availability_zone" => 2,
  "securitygroups" => 2,
  "service" => 2,
  "doesnt" => 2,
  "internal" => 2,
  "vm" => 2,
  "know" => 2,
  "a_grainsdreamcomputepy" => 2,
  "which" => 2,
  "openstack20120810meta_datajsoninfo" => 2,
  "latestmetadatainfo" => 2,
  "latestmetadatablockdevicemappinginfo" => 2,
  "latestmetadatablockdevicemappingamiinfo" => 2,
  "latestmetadatablockdevicemappingebs0info" => 2,
  "latestmetadatablockdevicemappingebs1info" => 2,
  "latestmetadatablockdevicemappingrootinfo" => 2,
  "latestmetadatahostnameinfo" => 2,
  "latestmetadatainstanceactioninfo" => 2,
  "latestmetadatainstanceidinfo" => 2,
  "latestmetadatainstancetypeinfo" => 2,
  "latestmetadatalocalipv4info" => 2,
  "latestmetadataplacementinfo" => 2,
  "latestmetadataplacementavailabilityzoneinfo" => 2,
  "latestmetadatapublicipv4info" => 2,
  "latestmetadataramdiskidinfo" => 2,
  "latestmetadatareservationidinfo" => 2,
  "http" => 2,
  "nova" => 2,
  "have" => 2,
  "folder" => 2,
  "_grains" => 2,
  "logging" => 2,
  "log" => 2,
  "httplib" => 2,
  "conn" => 2,
  "httplibhttpconnection169254169254" => 2,
  "timeout1" => 2,
  "connrequestget" => 2,
  "dreamcomputeopenstack" => 2,
  "following" => 2,
  "latestmetadata" => 2,
  "lightspeed" => 2,
  "placement" => 2,
  "each" => 2,
  "sshrsa" => 2,
  "public" => 2,
  "function" => 2,
  "keys" => 2,
  "might" => 2,
  "_call_awslatestmetadatas" => 2,
  "elif" => 2,
  "should" => 2,
  "_get_dreamcompute_hostinfopath" => 2,
  "d" => 2,
  "x" => 2,
  "v" => 2,
  "nd" => 2,
  "recursive" => 2,
  "does" => 2,
  "like" => 2,
  "returns" => 2,
  "_snake_caseify_dictdata" => 2,
  "try" => 2,
  "_get_dreamcompute_additional" => 2,
  "error" => 2,
  "ioerror" => 2,
  "dreamcompute_info" => 2,
  "stack" => 2,
}
`;

exports[`TextProcessingNormalizer Sanity-Check 1`] = `
Object {
  "chuck": 5,
  "wood": 4,
  "woodchuck": 4,
}
`;

exports[`TextProcessingNormalizer Sanity-Check 2`] = `
Object {
  "keywords": Array [
    "chuck",
    "woodchuck",
    "wood",
  ],
  "sorted": Map {
    "chuck" => 5,
    "woodchuck" => 4,
    "wood" => 4,
  },
}
`;
